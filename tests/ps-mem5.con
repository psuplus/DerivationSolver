; assertions to be verified
 (join dStall iStall) <: pipeInhibit     ; assign pipeInhibit = (dStall)|(iStall) @mem5.v:329
 (join iDataRamMuxOut iStall) <: Iin     ; Iin = iDataRamMuxOut @mem5.v:341
 iStall <: Iin     ; Iin = 0 @mem5.v:341
(isLoad==1)  =>  H <: H     ; cacheOut = dDataRamMuxOut @mem5.v:344
(Not(isLoad==1))  =>  isLoad <: H     ; cacheOut = 0 @mem5.v:344
(Dsize==0)  =>  (join MAR Dsize) <: sa     ; sa = ((~(MAR))&(3))<<(3) @mem5.v:381
(Not(Dsize==0))  =>  Dsize <: sa     ; sa = 0 @mem5.v:381
(Dsize==1)  =>  (join MAR Dsize) <: sa     ; sa = (((~(MAR))>>(1))&(1))<<(4) @mem5.v:382
(Not(Dsize==1))  =>  Dsize <: sa     ; sa = 0 @mem5.v:382
(Dsize==2)  =>  Dsize <: sa     ; sa = 0 @mem5.v:383
(Not(Dsize==2))  =>  Dsize <: sa     ; sa = 0 @mem5.v:383
(Dsize==0)  =>  (join sa Dsize) <: mask     ; mask = (255)<<(sa) @mem5.v:386
(Not(Dsize==0))  =>  Dsize <: mask     ; mask = 0 @mem5.v:386
(Dsize==1)  =>  (join sa Dsize) <: mask     ; mask = (65535)<<(sa) @mem5.v:387
(Not(Dsize==1))  =>  Dsize <: mask     ; mask = 0 @mem5.v:387
(Dsize==2)  =>  Dsize <: mask     ; mask = 0 @mem5.v:388
(Not(Dsize==2))  =>  Dsize <: mask     ; mask = 0 @mem5.v:388
 (join (join dTagRamOutLow MAR) dStateRamOutLow) <: dHit0     ; assign dHit0 = (dTagRamOutLow[0]==MAR[31:13])&(dStateRamOutLow[0][0]) @mem5.v:406
 (join (join dTagRamOutLow MAR) dStateRamOutLow) <: dHit1     ; assign dHit1 = (dTagRamOutLow[1]==MAR[31:13])&(dStateRamOutLow[1][0]) @mem5.v:407
 H <: H     ; assign dHit2 = (dTagRamOutHigh[0]==MAR[31:13])&(dStateRamOutHigh[0][0]) @mem5.v:408
 H <: H     ; assign dHit3 = (dTagRamOutHigh[1]==MAR[31:13])&(dStateRamOutHigh[1][0]) @mem5.v:409
 H <: H     ; assign dHitNaive = (((dHit0)|(dHit1))|(dHit2))|(dHit3) @mem5.v:411
(ReadLabel==0)  =>  (join (join dHit0 dHit1) ReadLabel) <: dHit     ; dHit = 1 @mem5.v:413
(ReadLabel==0)  =>  (join (join dHit0 dHit1) ReadLabel) <: dHit     ; dHit = 0 @mem5.v:413
(Not(ReadLabel==0))  =>  H <: dHit     ; dHit = 1 @mem5.v:414
(Not(ReadLabel==0))  =>  H <: dHit     ; dHit = 0 @mem5.v:414
(dHit0==1)  =>  H <: H     ; dDataRamMuxOut = dDataRamOutLow[0] @mem5.v:416
(dHit1==1) (Not(dHit0==1))  =>  H <: H     ; dDataRamMuxOut = dDataRamOutLow[1] @mem5.v:417
(Not(dHit0==1)) (dHit2==1) (Not(dHit1==1))  =>  H <: H     ; dDataRamMuxOut = dDataRamOutHigh[0] @mem5.v:418
(Not(dHit0==1)) (Not(dHit1==1)) (Not(dHit2==1)) (dHit3==1)  =>  H <: H     ; dDataRamMuxOut = dDataRamOutHigh[1] @mem5.v:419
(Not(dHit0==1)) (Not(dHit3==1)) (Not(dHit1==1)) (Not(dHit2==1))  =>  H <: H     ; dDataRamMuxOut = 0 @mem5.v:419
 (join (join isLoad isStore) (join dHit dFsmState)) <: dStall     ; assign dStall = ((isLoad)|(isStore))&((~(dHit))|(Not( dFsmState==DFSM_IDLE))) @mem5.v:421
 MAR <: dTagRamIndex     ; assign dTagRamIndex = MAR[12:5] @mem5.v:424
 MAR <: dTagRamIn     ; assign dTagRamIn = MAR[31:13] @mem5.v:425
(dFsmState==DFSM_STOREHIT)  =>  (join rMAR dFsmState) <: dStateRamIndex     ; dStateRamIndex = rMAR[12:5] @mem5.v:427
(Not(dFsmState==DFSM_STOREHIT))  =>  (join MAR dFsmState) <: dStateRamIndex     ; dStateRamIndex = MAR[12:5] @mem5.v:427
(dFsmState==DFSM_STOREHIT)  =>  (join rMAR dFsmState) <: dDataRamIndex     ; dDataRamIndex = rMAR[12:5] @mem5.v:429
(Not(dFsmState==DFSM_STOREHIT))  =>  (join MAR dFsmState) <: dDataRamIndex     ; dDataRamIndex = MAR[12:5] @mem5.v:429
(dFsmState==DFSM_REFILL)  =>  (join dOffset dFsmState) <: dDataRamOffset     ; dDataRamOffset = dOffset[(3)-(1):0] @mem5.v:430
(Not(dFsmState==DFSM_REFILL)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset dFsmState) <: dDataRamOffset     ; dDataRamOffset = dOffset[(3)-(1):0] @mem5.v:431
(Not(dFsmState==DFSM_REFILL)) (Not(dFsmState==DFSM_WRITEBACK)) (dFsmState==DFSM_STOREHIT)  =>  (join rMAR dFsmState) <: dDataRamOffset     ; dDataRamOffset = rMAR[4:2] @mem5.v:432
(Not(dFsmState==DFSM_REFILL)) (Not(dFsmState==DFSM_WRITEBACK)) (Not(dFsmState==DFSM_STOREHIT))  =>  (join MAR dFsmState) <: dDataRamOffset     ; dDataRamOffset = MAR[4:2] @mem5.v:432
(dWriteWay==0)  =>  H <: H     ; dMemBus = dDataRamOutLow[0] @mem5.v:435
(dWriteWay==1) (Not(dWriteWay==0))  =>  H <: H     ; dMemBus = dDataRamOutLow[1] @mem5.v:436
(Not(dWriteWay==0)) (Not(dWriteWay==1)) (dWriteWay==2)  =>  H <: H     ; dMemBus = dDataRamOutHigh[0] @mem5.v:437
(Not(dWriteWay==0)) (Not(dWriteWay==1)) (dWriteWay==3) (Not(dWriteWay==2))  =>  H <: H     ; dMemBus = dDataRamOutHigh[1] @mem5.v:438
(dWriteWay==2) (Not(dWriteWay==0)) (Not(dWriteWay==1)) (Not(dWriteWay==3)) (Not(dWriteWay==2))  =>  H <: H     ; dMemBus = 0 @mem5.v:438
(dWriteWay==3) (Not(dWriteWay==0)) (Not(dWriteWay==1)) (Not(dWriteWay==3)) (Not(dWriteWay==2))  =>  H <: H     ; dMemBus = 0 @mem5.v:438
(dWriteWay==0) (Not(dWriteWay==0)) (Not(dWriteWay==1)) (Not(dWriteWay==3)) (Not(dWriteWay==2))  =>  L <: H     ; dMemBus = 0 @mem5.v:438
(dWriteWay==1) (Not(dWriteWay==0)) (Not(dWriteWay==1)) (Not(dWriteWay==3)) (Not(dWriteWay==2))  =>  L <: H     ; dMemBus = 0 @mem5.v:438
(And (And (And (dFsmState==DFSM_REFILL , dHit==0) , ReadLabel==0) , dHitNaive==1))  =>  H <: H     ; dDataRamInv2 = dDataRamMuxOut @mem5.v:440
(Not(And (And (And (dFsmState==DFSM_REFILL , dHit==0) , ReadLabel==0) , dHitNaive==1)))  =>  H <: H     ; dDataRamInv2 = dDataRamIn @mem5.v:440
(dFsmState==DFSM_STOREHIT)  =>  (join rtempdWay dFsmState) <: dReadWay     ; dReadWay = rtempdWay @mem5.v:492
(Not(dFsmState==DFSM_STOREHIT))  =>  (join tempdWay dFsmState) <: dReadWay     ; dReadWay = tempdWay @mem5.v:492
(dStateWay==2) (dHit2==1) (dFsmState==DFSM_REFILL)  =>  H <: H     ; dStateWay = 2 @mem5.v:493
(dStateWay==3) (dHit2==1) (dFsmState==DFSM_REFILL)  =>  H <: H     ; dStateWay = 2 @mem5.v:493
(dStateWay==0) (dHit2==1) (dFsmState==DFSM_REFILL)  =>  H <: L     ; dStateWay = 2 @mem5.v:493
(dStateWay==1) (dHit2==1) (dFsmState==DFSM_REFILL)  =>  H <: L     ; dStateWay = 2 @mem5.v:493
(dStateWay==2) (Not(dHit2==1)) (dFsmState==DFSM_REFILL)  =>  H <: H     ; dStateWay = 3 @mem5.v:493
(dStateWay==3) (Not(dHit2==1)) (dFsmState==DFSM_REFILL)  =>  H <: H     ; dStateWay = 3 @mem5.v:493
(dStateWay==0) (Not(dHit2==1)) (dFsmState==DFSM_REFILL)  =>  H <: L     ; dStateWay = 3 @mem5.v:493
(dStateWay==1) (Not(dHit2==1)) (dFsmState==DFSM_REFILL)  =>  H <: L     ; dStateWay = 3 @mem5.v:493
(dStateWay==2) (Not(And (dFsmState==DFSM_REFILL , dOffset==7)))  =>  (join H (join dFsmState dOffset)) <: H     ; dStateWay = dWriteWay @mem5.v:493
(dStateWay==3) (Not(And (dFsmState==DFSM_REFILL , dOffset==7)))  =>  (join H (join dFsmState dOffset)) <: H     ; dStateWay = dWriteWay @mem5.v:493
(dStateWay==0) (Not(And (dFsmState==DFSM_REFILL , dOffset==7)))  =>  (join L (join dFsmState dOffset)) <: L     ; dStateWay = dWriteWay @mem5.v:493
(dStateWay==1) (Not(And (dFsmState==DFSM_REFILL , dOffset==7)))  =>  (join L (join dFsmState dOffset)) <: L     ; dStateWay = dWriteWay @mem5.v:493
(BusSel==1)  =>  (join dMemRead BusSel) <: Read     ; Read = dMemRead @mem5.v:731
(Not(BusSel==1))  =>  (join iMemRead BusSel) <: Read     ; Read = iMemRead @mem5.v:731
 dMemWrite <: Write     ; assign Write = dMemWrite @mem5.v:732
(BusSel==1)  =>  (join dMemAddr BusSel) <: Addr     ; Addr = dMemAddr @mem5.v:733
(Not(BusSel==1))  =>  (join iMemAddr BusSel) <: Addr     ; Addr = iMemAddr @mem5.v:733
(Write==0) (Write==1)  =>  H <: L     ; Bus = dMemBus @mem5.v:734
(Write==1) (Write==1)  =>  H <: H     ; Bus = dMemBus @mem5.v:734
(Write==0) (Not(Write==1))  =>  Write <: L     ; Bus = 0 @mem5.v:734
(Write==1) (Not(Write==1))  =>  Write <: H     ; Bus = 0 @mem5.v:734
(BusSel==1)  =>  BusSel <: iMemValid     ; iMemValid = 0 @mem5.v:736
(Not(BusSel==1))  =>  (join Valid BusSel) <: iMemValid     ; iMemValid = Valid @mem5.v:736
(BusSel==1)  =>  (join Valid BusSel) <: dMemValid     ; dMemValid = Valid @mem5.v:737
(Not(BusSel==1))  =>  BusSel <: dMemValid     ; dMemValid = 0 @mem5.v:737
(MRST==1)  =>  L <: H     ; CPU.numLoads <= 0 @mem5.v:306
(MRST==1)  =>  L <: H     ; CPU.numStores <= 0 @mem5.v:307
 H <: H     ; CPU.numLoads <= (CPU.numLoads)+(1) @mem5.v:311
 H <: H     ; CPU.numStores <= (CPU.numStores)+(1) @mem5.v:314
(MRST==1)  =>  L <: pcInhibit     ; pcInhibit <= 0 @mem5.v:333
(Not(MRST==1))  =>  pipeInhibit <: pcInhibit     ; pcInhibit <= pipeInhibit @mem5.v:336
 I3 <: isLoad     ; isLoad = 1 @mem5.v:355
 I3 <: isLoad     ; isLoad = 0 @mem5.v:358
 I3 <: isStore     ; isStore = 1 @mem5.v:362
 I3 <: isStore     ; isStore = 0 @mem5.v:365
 I3 <: Dsize     ; Dsize = 1 @mem5.v:370
 I3 <: Dsize     ; Dsize = 0 @mem5.v:373
 I3 <: Dsize     ; Dsize = 2 @mem5.v:376
(MRST==1)  =>  L <: rMAR     ; rMAR <= 0 @mem5.v:393
(Not(MRST==1))  =>  MAR <: rMAR     ; rMAR <= MAR @mem5.v:396
(ReadLabel==0) (dHit0==1)  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: tempdWay     ; tempdWay = 0 @mem5.v:448
(ReadLabel==0) (Not(dHit0==1))  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: tempdWay     ; tempdWay = 1 @mem5.v:448
(ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: tempdWay     ; tempdWay = 1 @mem5.v:451
(ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: tempdWay     ; tempdWay = 0 @mem5.v:451
(Not(ReadLabel==0)) (dHit0==1)  =>  H <: tempdWay     ; tempdWay = 0 @mem5.v:456
(Not(ReadLabel==0)) (dHit1==1) (Not(dHit0==1))  =>  H <: tempdWay     ; tempdWay = 1 @mem5.v:456
(Not(ReadLabel==0)) (Not(dHit0==1)) (Not(dHit1==1)) (dHit2==1)  =>  H <: tempdWay     ; tempdWay = 2 @mem5.v:456
(Not(ReadLabel==0)) (Not(dHit0==1)) (Not(dHit1==1)) (Not(dHit2==1))  =>  H <: tempdWay     ; tempdWay = 3 @mem5.v:456
(Not(ReadLabel==0))  =>  H <: tempdWay     ; tempdWay = 3 @mem5.v:459
(Not(ReadLabel==0))  =>  H <: tempdWay     ; tempdWay = 2 @mem5.v:459
(MRST==1)  =>  L <: rtempdWay     ; rtempdWay <= 0 @mem5.v:466
(Not(MRST==1))  =>  tempdWay <: rtempdWay     ; rtempdWay <= tempdWay @mem5.v:469
(dWriteWay==2) (ReadLabel==0) (dHit0==1)  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 0 @mem5.v:476
(dWriteWay==3) (ReadLabel==0) (dHit0==1)  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 0 @mem5.v:476
(dWriteWay==0) (ReadLabel==0) (dHit0==1)  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 0 @mem5.v:476
(dWriteWay==1) (ReadLabel==0) (dHit0==1)  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 0 @mem5.v:476
(dWriteWay==2) (ReadLabel==0) (Not(dHit0==1))  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 1 @mem5.v:476
(dWriteWay==3) (ReadLabel==0) (Not(dHit0==1))  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 1 @mem5.v:476
(dWriteWay==0) (ReadLabel==0) (Not(dHit0==1))  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 1 @mem5.v:476
(dWriteWay==1) (ReadLabel==0) (Not(dHit0==1))  =>  (join dHit0 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 1 @mem5.v:476
(dWriteWay==2) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 1 @mem5.v:479
(dWriteWay==3) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 1 @mem5.v:479
(dWriteWay==0) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 1 @mem5.v:479
(dWriteWay==1) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 1 @mem5.v:479
(dWriteWay==2) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 0 @mem5.v:479
(dWriteWay==3) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: H     ; dWriteWay = 0 @mem5.v:479
(dWriteWay==0) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 0 @mem5.v:479
(dWriteWay==1) (ReadLabel==0)  =>  (join I3 (join (join dHit0 dHit1) ReadLabel)) <: L     ; dWriteWay = 0 @mem5.v:479
(dWriteWay==2) (Not(ReadLabel==0)) (dHit2==1)  =>  H <: H     ; dWriteWay = 2 @mem5.v:484
(dWriteWay==3) (Not(ReadLabel==0)) (dHit2==1)  =>  H <: H     ; dWriteWay = 2 @mem5.v:484
(dWriteWay==0) (Not(ReadLabel==0)) (dHit2==1)  =>  H <: L     ; dWriteWay = 2 @mem5.v:484
(dWriteWay==1) (Not(ReadLabel==0)) (dHit2==1)  =>  H <: L     ; dWriteWay = 2 @mem5.v:484
(dWriteWay==2) (Not(ReadLabel==0)) (Not(dHit2==1))  =>  H <: H     ; dWriteWay = 3 @mem5.v:484
(dWriteWay==3) (Not(ReadLabel==0)) (Not(dHit2==1))  =>  H <: H     ; dWriteWay = 3 @mem5.v:484
(dWriteWay==0) (Not(ReadLabel==0)) (Not(dHit2==1))  =>  H <: L     ; dWriteWay = 3 @mem5.v:484
(dWriteWay==1) (Not(ReadLabel==0)) (Not(dHit2==1))  =>  H <: L     ; dWriteWay = 3 @mem5.v:484
(dWriteWay==2) (Not(ReadLabel==0))  =>  H <: H     ; dWriteWay = 3 @mem5.v:487
(dWriteWay==3) (Not(ReadLabel==0))  =>  H <: H     ; dWriteWay = 3 @mem5.v:487
(dWriteWay==0) (Not(ReadLabel==0))  =>  H <: L     ; dWriteWay = 3 @mem5.v:487
(dWriteWay==1) (Not(ReadLabel==0))  =>  H <: L     ; dWriteWay = 3 @mem5.v:487
(dWriteWay==2) (Not(ReadLabel==0))  =>  H <: H     ; dWriteWay = 2 @mem5.v:487
(dWriteWay==3) (Not(ReadLabel==0))  =>  H <: H     ; dWriteWay = 2 @mem5.v:487
(dWriteWay==0) (Not(ReadLabel==0))  =>  H <: L     ; dWriteWay = 2 @mem5.v:487
(dWriteWay==1) (Not(ReadLabel==0))  =>  H <: L     ; dWriteWay = 2 @mem5.v:487
(MRST==1)  =>  L <: dFsmState     ; no-sensitive-upgrade check dFsmState <= IFSM_IDLE @mem5.v:500
(MRST==1)  =>  L <: dFsmState     ; dFsmState <= IFSM_IDLE @mem5.v:500
(MRST==1)  =>  L <: dTagRamWe     ; no-sensitive-upgrade check dTagRamWe <= 0 @mem5.v:503
(MRST==1)  =>  L <: dTagRamWe     ; dTagRamWe <= 0 @mem5.v:503
(dStateWay==2) (MRST==1)  =>  L <: H     ; dStateRamWe <= 0 @mem5.v:504
(dStateWay==3) (MRST==1)  =>  L <: H     ; dStateRamWe <= 0 @mem5.v:504
(dStateWay==0) (MRST==1)  =>  L <: L     ; dStateRamWe <= 0 @mem5.v:504
(dStateWay==1) (MRST==1)  =>  L <: L     ; dStateRamWe <= 0 @mem5.v:504
(dStateWay==2) (MRST==1)  =>  L <: H     ; dStateRamIn <= 0 @mem5.v:505
(dStateWay==3) (MRST==1)  =>  L <: H     ; dStateRamIn <= 0 @mem5.v:505
(dStateWay==0) (MRST==1)  =>  L <: L     ; dStateRamIn <= 0 @mem5.v:505
(dStateWay==1) (MRST==1)  =>  L <: L     ; dStateRamIn <= 0 @mem5.v:505
(MRST==1)  =>  L <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 0 @mem5.v:506
(MRST==1)  =>  L <: dDataRamWe     ; dDataRamWe <= 0 @mem5.v:506
(MRST==1)  =>  L <: dOffset     ; no-sensitive-upgrade check dOffset <= {3{0}} @mem5.v:507
(MRST==1)  =>  L <: dOffset     ; dOffset <= {3{0}} @mem5.v:507
(MRST==1)  =>  L <: H     ; dDataRamIn <= 0 @mem5.v:508
(MRST==1)  =>  L <: dMemRead     ; no-sensitive-upgrade check dMemRead <= 0 @mem5.v:511
(MRST==1)  =>  L <: dMemRead     ; dMemRead <= 0 @mem5.v:511
(MRST==1)  =>  L <: dMemWrite     ; no-sensitive-upgrade check dMemWrite <= 0 @mem5.v:512
(MRST==1)  =>  L <: dMemWrite     ; dMemWrite <= 0 @mem5.v:512
(MRST==1)  =>  L <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= 0 @mem5.v:513
(MRST==1)  =>  L <: dMemAddr     ; dMemAddr <= 0 @mem5.v:513
(MRST==1)  =>  L <: BusSel     ; no-sensitive-upgrade check BusSel <= 0 @mem5.v:516
(MRST==1)  =>  L <: BusSel     ; BusSel <= 0 @mem5.v:516
(MRST==1)  =>  L <: H     ; CPU.numDMisses <= 0 @mem5.v:520
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: BusSel     ; no-sensitive-upgrade check BusSel <= 1 @mem5.v:532
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: BusSel     ; BusSel <= 1 @mem5.v:532
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WRITEBACK @mem5.v:534
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dFsmState     ; dFsmState <= DFSM_WRITEBACK @mem5.v:534
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dMemWrite     ; no-sensitive-upgrade check dMemWrite <= 1 @mem5.v:537
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dMemWrite     ; dMemWrite <= 1 @mem5.v:537
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= {dTagRamOutLow[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem5.v:538
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dMemAddr     ; dMemAddr <= {dTagRamOutLow[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem5.v:538
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WAITMEM @mem5.v:541
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dFsmState     ; dFsmState <= DFSM_WAITMEM @mem5.v:541
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dMemRead     ; no-sensitive-upgrade check dMemRead <= 1 @mem5.v:544
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dMemRead     ; dMemRead <= 1 @mem5.v:544
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= MAR @mem5.v:545
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dMemAddr     ; dMemAddr <= MAR @mem5.v:545
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  H <: H     ; CPU.numDMisses <= (CPU.numDMisses)+(1) @mem5.v:549
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  (join ReadLabel (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: BusSel     ; no-sensitive-upgrade check BusSel <= 1 @mem5.v:554
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  (join ReadLabel (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: BusSel     ; BusSel <= 1 @mem5.v:554
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  H <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WRITEBACK @mem5.v:557
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  H <: dFsmState     ; dFsmState <= DFSM_WRITEBACK @mem5.v:557
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  H <: dMemWrite     ; no-sensitive-upgrade check dMemWrite <= 1 @mem5.v:560
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  H <: dMemWrite     ; dMemWrite <= 1 @mem5.v:560
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  H <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= {dTagRamOutHigh[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem5.v:561
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1)  =>  H <: dMemAddr     ; dMemAddr <= {dTagRamOutHigh[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem5.v:561
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WAITMEM @mem5.v:564
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: dFsmState     ; dFsmState <= DFSM_WAITMEM @mem5.v:564
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: dMemRead     ; no-sensitive-upgrade check dMemRead <= 1 @mem5.v:567
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: dMemRead     ; dMemRead <= 1 @mem5.v:567
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= MAR @mem5.v:568
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: dMemAddr     ; dMemAddr <= MAR @mem5.v:568
(Not(MRST==1)) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (dFsmState==DFSM_IDLE) (Not(Or (dReadWay==0 , dReadWay==1))) (ReadLabel==1) (iHit==1)  =>  H <: H     ; CPU.numDMisses <= (CPU.numDMisses)+(1) @mem5.v:572
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_STOREHIT @mem5.v:580
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dFsmState     ; dFsmState <= DFSM_STOREHIT @mem5.v:580
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 1 @mem5.v:583
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dDataRamWe     ; dDataRamWe <= 1 @mem5.v:583
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (Dsize==2) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join SMDR (join Dsize (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: H     ; dDataRamIn <= SMDR @mem5.v:586
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (Dsize==1) (Not(Dsize==2)) (And ( (isStore == 1) ,  (dHit == 1)))  =>  H <: H     ; dDataRamIn <= ((dDataRamMuxOut)&(~(mask)))|(((SMDR)&(65535))<<(sa)) @mem5.v:589
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (Dsize==0) (Not(Dsize==2)) (Not(Dsize==1)) (And ( (isStore == 1) ,  (dHit == 1)))  =>  H <: H     ; dDataRamIn <= ((dDataRamMuxOut)&(~(mask)))|(((SMDR)&(255))<<(sa)) @mem5.v:592
(Not(MRST==1)) (dFsmState==DFSM_WAITMEM) (dMemValid==1)  =>  (join dMemValid dFsmState) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_REFILL @mem5.v:602
(Not(MRST==1)) (dFsmState==DFSM_WAITMEM) (dMemValid==1)  =>  (join dMemValid dFsmState) <: dFsmState     ; dFsmState <= DFSM_REFILL @mem5.v:602
(Not(MRST==1)) (dFsmState==DFSM_WAITMEM) (dMemValid==1)  =>  (join dMemValid dFsmState) <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 1 @mem5.v:605
(Not(MRST==1)) (dFsmState==DFSM_WAITMEM) (dMemValid==1)  =>  (join dMemValid dFsmState) <: dDataRamWe     ; dDataRamWe <= 1 @mem5.v:605
(Not(MRST==1)) (dFsmState==DFSM_WAITMEM) (dMemValid==1) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1))  =>  H <: H     ; dDataRamIn <= dDataRamMuxOut @mem5.v:607
(Not(And (And (dHit==0 , ReadLabel==0) , dHitNaive==1))) (Not(MRST==1)) (dFsmState==DFSM_WAITMEM) (dMemValid==1)  =>  H <: H     ; dDataRamIn <= Bus @mem5.v:610
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_IDLE @mem5.v:619
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dFsmState     ; dFsmState <= DFSM_IDLE @mem5.v:619
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dTagRamWe     ; no-sensitive-upgrade check dTagRamWe <= 0 @mem5.v:622
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dTagRamWe     ; dTagRamWe <= 0 @mem5.v:622
(dStateWay==2) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: H     ; dStateRamWe <= 0 @mem5.v:623
(dStateWay==3) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: H     ; dStateRamWe <= 0 @mem5.v:623
(dStateWay==0) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: L     ; dStateRamWe <= 0 @mem5.v:623
(dStateWay==1) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: L     ; dStateRamWe <= 0 @mem5.v:623
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dOffset     ; no-sensitive-upgrade check dOffset <= {(3)+(1){0}} @mem5.v:624
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dOffset     ; dOffset <= {(3)+(1){0}} @mem5.v:624
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: nDOffset     ; no-sensitive-upgrade check nDOffset = (dOffset)+(1) @mem5.v:628
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: nDOffset     ; nDOffset = (dOffset)+(1) @mem5.v:628
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: dOffset     ; no-sensitive-upgrade check dOffset <= nDOffset @mem5.v:629
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: dOffset     ; dOffset <= nDOffset @mem5.v:629
(dStateWay==2) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: H     ; dStateRamIn <= 3 @mem5.v:631
(dStateWay==3) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: H     ; dStateRamIn <= 3 @mem5.v:631
(dStateWay==0) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: L     ; dStateRamIn <= 3 @mem5.v:631
(dStateWay==1) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: L     ; dStateRamIn <= 3 @mem5.v:631
(dStateWay==2) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: H     ; dStateRamWe <= 1 @mem5.v:632
(dStateWay==3) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: H     ; dStateRamWe <= 1 @mem5.v:632
(dStateWay==0) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: L     ; dStateRamWe <= 1 @mem5.v:632
(dStateWay==1) (dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: L     ; dStateRamWe <= 1 @mem5.v:632
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: dTagRamWe     ; no-sensitive-upgrade check dTagRamWe <= 1 @mem5.v:633
(dFsmState==DFSM_REFILL) (Not(MRST==1))  =>  (join dOffset (join dOffset dFsmState)) <: dTagRamWe     ; dTagRamWe <= 1 @mem5.v:633
(dFsmState==DFSM_REFILL) (dOffset==7) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: nDOffset     ; no-sensitive-upgrade check nDOffset = (dOffset)+(1) @mem5.v:637
(dFsmState==DFSM_REFILL) (dOffset==7) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: nDOffset     ; nDOffset = (dOffset)+(1) @mem5.v:637
(dFsmState==DFSM_REFILL) (dOffset==7) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dOffset     ; no-sensitive-upgrade check dOffset <= nDOffset @mem5.v:638
(dFsmState==DFSM_REFILL) (dOffset==7) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dOffset     ; dOffset <= nDOffset @mem5.v:638
(dStateWay==2) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: H     ; dStateRamIn <= 0 @mem5.v:642
(dStateWay==3) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: H     ; dStateRamIn <= 0 @mem5.v:642
(dStateWay==0) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: L     ; dStateRamIn <= 0 @mem5.v:642
(dStateWay==1) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: L     ; dStateRamIn <= 0 @mem5.v:642
(dStateWay==2) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: H     ; dStateRamWe <= 1 @mem5.v:643
(dStateWay==3) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: H     ; dStateRamWe <= 1 @mem5.v:643
(dStateWay==0) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: L     ; dStateRamWe <= 1 @mem5.v:643
(dStateWay==1) (dFsmState==DFSM_REFILL) (dOffset==7) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Or (dStateWay==2 , dStateWay==3)) (Not(MRST==1))  =>  H <: L     ; dStateRamWe <= 1 @mem5.v:643
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 0 @mem5.v:646
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dDataRamWe     ; dDataRamWe <= 0 @mem5.v:646
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: H     ; dDataRamIn <= 0 @mem5.v:647
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dMemRead     ; no-sensitive-upgrade check dMemRead <= 0 @mem5.v:648
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dMemRead     ; dMemRead <= 0 @mem5.v:648
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: BusSel     ; no-sensitive-upgrade check BusSel <= 0 @mem5.v:649
(dFsmState==DFSM_REFILL) (dOffset==7)  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: BusSel     ; BusSel <= 0 @mem5.v:649
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: nDOffset     ; no-sensitive-upgrade check nDOffset = (dOffset)+(1) @mem5.v:653
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: nDOffset     ; nDOffset = (dOffset)+(1) @mem5.v:653
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dOffset     ; no-sensitive-upgrade check dOffset <= nDOffset @mem5.v:654
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dOffset     ; dOffset <= nDOffset @mem5.v:654
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 1 @mem5.v:658
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(MRST==1))  =>  (join dOffset (join dOffset (join dOffset dFsmState))) <: dDataRamWe     ; dDataRamWe <= 1 @mem5.v:658
(dFsmState==DFSM_REFILL) (And (And (dHit==0 , ReadLabel==0) , dHitNaive==1)) (Not(dOffset==7)) (Not(MRST==1))  =>  H <: H     ; dDataRamIn <= dDataRamMuxOut @mem5.v:664
(dFsmState==DFSM_REFILL) (Not(dOffset==7)) (Not(And (And (dHit==0 , ReadLabel==0) , dHitNaive==1))) (Not(MRST==1))  =>  H <: H     ; dDataRamIn <= Bus @mem5.v:667
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_IDLE @mem5.v:675
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: dFsmState     ; dFsmState <= DFSM_IDLE @mem5.v:675
(dStateWay==2) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: H     ; dStateRamWe <= 0 @mem5.v:678
(dStateWay==3) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: H     ; dStateRamWe <= 0 @mem5.v:678
(dStateWay==0) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: L     ; dStateRamWe <= 0 @mem5.v:678
(dStateWay==1) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: L     ; dStateRamWe <= 0 @mem5.v:678
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 0 @mem5.v:679
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: dDataRamWe     ; dDataRamWe <= 0 @mem5.v:679
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: dOffset     ; no-sensitive-upgrade check dOffset <= {(3)+(1){0}} @mem5.v:680
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: dOffset     ; dOffset <= {(3)+(1){0}} @mem5.v:680
(dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: H     ; dDataRamIn <= 0 @mem5.v:681
(dStateWay==2) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: H     ; dStateRamIn <= 0 @mem5.v:682
(dStateWay==3) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: H     ; dStateRamIn <= 0 @mem5.v:682
(dStateWay==0) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: L     ; dStateRamIn <= 0 @mem5.v:682
(dStateWay==1) (dFsmState==DFSM_STOREHIT) (Not(MRST==1))  =>  dFsmState <: L     ; dStateRamIn <= 0 @mem5.v:682
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_IDLE @mem5.v:689
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dFsmState     ; dFsmState <= DFSM_IDLE @mem5.v:689
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dMemWrite     ; no-sensitive-upgrade check dMemWrite <= 0 @mem5.v:692
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dMemWrite     ; dMemWrite <= 0 @mem5.v:692
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: BusSel     ; no-sensitive-upgrade check BusSel <= 0 @mem5.v:693
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: BusSel     ; BusSel <= 0 @mem5.v:693
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dOffset     ; no-sensitive-upgrade check dOffset <= {(3)+(1){0}} @mem5.v:694
(dOffset==7) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dOffset     ; dOffset <= {(3)+(1){0}} @mem5.v:694
(Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: nDOffset     ; no-sensitive-upgrade check nDOffset = (dOffset)+(1) @mem5.v:698
(Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: nDOffset     ; nDOffset = (dOffset)+(1) @mem5.v:698
(Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dOffset     ; no-sensitive-upgrade check dOffset <= nDOffset @mem5.v:699
(Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dOffset dFsmState) <: dOffset     ; dOffset <= nDOffset @mem5.v:699
(Not(dOffset==7)) (Or (dReadWay==0 , dReadWay==1)) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dReadWay (join dOffset dFsmState)) <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= {dTagRamOutLow[dReadWay[0]], rMAR[12:5], nDOffset[(3)-(1):0], 0} @mem5.v:704
(Not(dOffset==7)) (Or (dReadWay==0 , dReadWay==1)) (dFsmState==DFSM_WRITEBACK) (Not(MRST==1))  =>  (join dReadWay (join dOffset dFsmState)) <: dMemAddr     ; dMemAddr <= {dTagRamOutLow[dReadWay[0]], rMAR[12:5], nDOffset[(3)-(1):0], 0} @mem5.v:704
(Not(Or (dReadWay==0 , dReadWay==1))) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK) (ReadLabel==1) (Not(MRST==1))  =>  (join ReadLabel (join dReadWay (join dOffset dFsmState))) <: dMemAddr     ; no-sensitive-upgrade check dMemAddr <= {dTagRamOutHigh[dReadWay[0]], rMAR[12:5], nDOffset[(3)-(1):0], 0} @mem5.v:708
(Not(Or (dReadWay==0 , dReadWay==1))) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK) (ReadLabel==1) (Not(MRST==1))  =>  (join ReadLabel (join dReadWay (join dOffset dFsmState))) <: dMemAddr     ; dMemAddr <= {dTagRamOutHigh[dReadWay[0]], rMAR[12:5], nDOffset[(3)-(1):0], 0} @mem5.v:708
(dStateWay==2) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset (join dOffset dFsmState)) <: H     ; dStateRamWe <= dOffset==(7)-(1) @mem5.v:713
(dStateWay==3) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset (join dOffset dFsmState)) <: H     ; dStateRamWe <= dOffset==(7)-(1) @mem5.v:713
(dStateWay==0) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset (join dOffset dFsmState)) <: L     ; dStateRamWe <= dOffset==(7)-(1) @mem5.v:713
(dStateWay==1) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset (join dOffset dFsmState)) <: L     ; dStateRamWe <= dOffset==(7)-(1) @mem5.v:713
(dStateWay==2) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset dFsmState) <: H     ; dStateRamIn <= 1 @mem5.v:714
(dStateWay==3) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset dFsmState) <: H     ; dStateRamIn <= 1 @mem5.v:714
(dStateWay==0) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset dFsmState) <: L     ; dStateRamIn <= 1 @mem5.v:714
(dStateWay==1) (Not(dOffset==7)) (dFsmState==DFSM_WRITEBACK)  =>  (join dOffset dFsmState) <: L     ; dStateRamIn <= 1 @mem5.v:714
