; assertions to be verified
 (join dStall iStall) <: pipeInhibit     ; assign pipeInhibit = (dStall)|(iStall) @mem18.v:329
 (join iDataRamMuxOut iStall) <: Iin     ; Iin = iDataRamMuxOut @mem18.v:341
 iStall <: Iin     ; Iin = 0 @mem18.v:341
(isLoad==1)  =>  H <: H     ; cacheOut = dDataRamMuxOut @mem18.v:344
(Not(isLoad==1))  =>  isLoad <: H     ; cacheOut = 0 @mem18.v:344
(MRST==1)  =>  L <: H     ; CPU.numLoads <= 0 @mem18.v:306
(MRST==1)  =>  L <: H     ; CPU.numStores <= 0 @mem18.v:307
 H <: H     ; CPU.numLoads <= (CPU.numLoads)+(1) @mem18.v:311
 H <: H     ; CPU.numStores <= (CPU.numStores)+(1) @mem18.v:314
(MRST==1)  =>  L <: pcInhibit     ; pcInhibit <= 0 @mem18.v:333
(Not(MRST==1))  =>  pipeInhibit <: pcInhibit     ; pcInhibit <= pipeInhibit @mem18.v:336
(MRST==1)  =>  L <: dFsmState     ; no-sensitive-upgrade check dFsmState <= IFSM_IDLE @mem18.v:356
(MRST==1)  =>  L <: dFsmState     ; dFsmState <= IFSM_IDLE @mem18.v:356
(MRST==1)  =>  L <: dTagRamWe     ; no-sensitive-upgrade check dTagRamWe <= 0 @mem18.v:359
(MRST==1)  =>  L <: dTagRamWe     ; dTagRamWe <= 0 @mem18.v:359
(dStateWay==2) (MRST==1)  =>  L <: H     ; dStateRamWe <= 0 @mem18.v:360
(dStateWay==3) (MRST==1)  =>  L <: H     ; dStateRamWe <= 0 @mem18.v:360
(dStateWay==0) (MRST==1)  =>  L <: L     ; dStateRamWe <= 0 @mem18.v:360
(dStateWay==1) (MRST==1)  =>  L <: L     ; dStateRamWe <= 0 @mem18.v:360
(dStateWay==2) (MRST==1)  =>  L <: H     ; dStateRamIn <= 0 @mem18.v:361
(dStateWay==3) (MRST==1)  =>  L <: H     ; dStateRamIn <= 0 @mem18.v:361
(dStateWay==0) (MRST==1)  =>  L <: L     ; dStateRamIn <= 0 @mem18.v:361
(dStateWay==1) (MRST==1)  =>  L <: L     ; dStateRamIn <= 0 @mem18.v:361
(MRST==1)  =>  L <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 0 @mem18.v:362
(MRST==1)  =>  L <: dDataRamWe     ; dDataRamWe <= 0 @mem18.v:362
(MRST==1)  =>  L <: dOffset     ; no-sensitive-upgrade check dOffset <= {3{0}} @mem18.v:363
(MRST==1)  =>  L <: dOffset     ; dOffset <= {3{0}} @mem18.v:363
(MRST==1)  =>  L <: H     ; dDataRamIn <= 0 @mem18.v:364
(ReadLabel==0) (MRST==1)  =>  L <: L     ; dMemRead <= 0 @mem18.v:367
(ReadLabel==1) (MRST==1)  =>  L <: H     ; dMemRead <= 0 @mem18.v:367
(ReadLabel==0) (MRST==1)  =>  L <: L     ; dMemWrite <= 0 @mem18.v:368
(ReadLabel==1) (MRST==1)  =>  L <: H     ; dMemWrite <= 0 @mem18.v:368
(ReadLabel==0) (MRST==1)  =>  L <: L     ; dMemAddr <= 0 @mem18.v:369
(ReadLabel==1) (MRST==1)  =>  L <: H     ; dMemAddr <= 0 @mem18.v:369
(dReadWay==2) (MRST==1)  =>  L <: H     ; BusSel <= 0 @mem18.v:372
(dReadWay==3) (MRST==1)  =>  L <: H     ; BusSel <= 0 @mem18.v:372
(dReadWay==0) (MRST==1)  =>  L <: L     ; BusSel <= 0 @mem18.v:372
(dReadWay==1) (MRST==1)  =>  L <: L     ; BusSel <= 0 @mem18.v:372
(MRST==1)  =>  L <: H     ; CPU.numDMisses <= 0 @mem18.v:376
(dReadWay==2) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: H     ; BusSel <= 1 @mem18.v:388
(dReadWay==3) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: H     ; BusSel <= 1 @mem18.v:388
(dReadWay==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: L     ; BusSel <= 1 @mem18.v:388
(dReadWay==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: L     ; BusSel <= 1 @mem18.v:388
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WRITEBACK @mem18.v:390
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: dFsmState     ; dFsmState <= DFSM_WRITEBACK @mem18.v:390
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: L     ; dMemWrite <= 1 @mem18.v:393
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: H     ; dMemWrite <= 1 @mem18.v:393
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join (join (join dTagRamOutLow MAR) dOffset) (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: L     ; dMemAddr <= {dTagRamOutLow[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem18.v:394
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (Or (dReadWay==0 , dReadWay==1))  =>  (join (join (join dTagRamOutLow MAR) dOffset) (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: H     ; dMemAddr <= {dTagRamOutLow[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem18.v:394
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WAITMEM @mem18.v:397
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: dFsmState     ; dFsmState <= DFSM_WAITMEM @mem18.v:397
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: L     ; dMemRead <= 1 @mem18.v:400
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: H     ; dMemRead <= 1 @mem18.v:400
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join MAR (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))))) <: L     ; dMemAddr <= MAR @mem18.v:401
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  (join MAR (join iHit (join dStateRamOutLow (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))))) <: H     ; dMemAddr <= MAR @mem18.v:401
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (iHit==1) (Or (dReadWay==0 , dReadWay==1))  =>  H <: H     ; CPU.numDMisses <= (CPU.numDMisses)+(1) @mem18.v:405
(dReadWay==2) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  (join ReadLabel (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: H     ; BusSel <= 1 @mem18.v:410
(dReadWay==3) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  (join ReadLabel (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: H     ; BusSel <= 1 @mem18.v:410
(dReadWay==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  (join ReadLabel (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: L     ; BusSel <= 1 @mem18.v:410
(dReadWay==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  (join ReadLabel (join dReadWay (join (join (join (join isLoad isStore) dHit) iHit) dFsmState))) <: L     ; BusSel <= 1 @mem18.v:410
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  H <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WRITEBACK @mem18.v:413
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  H <: dFsmState     ; dFsmState <= DFSM_WRITEBACK @mem18.v:413
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  H <: L     ; dMemWrite <= 1 @mem18.v:416
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  H <: H     ; dMemWrite <= 1 @mem18.v:416
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  H <: L     ; dMemAddr <= {dTagRamOutHigh[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem18.v:417
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1)))  =>  H <: H     ; dMemAddr <= {dTagRamOutHigh[dReadWay[0]], MAR[12:5], dOffset[(3)-(1):0], 0} @mem18.v:417
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_WAITMEM @mem18.v:420
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: dFsmState     ; dFsmState <= DFSM_WAITMEM @mem18.v:420
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: L     ; dMemRead <= 1 @mem18.v:423
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: H     ; dMemRead <= 1 @mem18.v:423
(ReadLabel==0) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: L     ; dMemAddr <= MAR @mem18.v:424
(ReadLabel==1) (Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: H     ; dMemAddr <= MAR @mem18.v:424
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And (Or ( (isLoad == 1) ,  (isStore == 1)) ,  (iHit == 1))) (ReadLabel==1) (Not(Or (dReadWay==0 , dReadWay==1))) (iHit==1)  =>  H <: H     ; CPU.numDMisses <= (CPU.numDMisses)+(1) @mem18.v:428
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dFsmState     ; no-sensitive-upgrade check dFsmState <= DFSM_STOREHIT @mem18.v:436
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dFsmState     ; dFsmState <= DFSM_STOREHIT @mem18.v:436
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dDataRamWe     ; no-sensitive-upgrade check dDataRamWe <= 1 @mem18.v:439
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1)))  =>  (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)) <: dDataRamWe     ; dDataRamWe <= 1 @mem18.v:439
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1))) (Dsize==2)  =>  (join SMDR (join Dsize (join (join isStore dHit) (join (join (join (join isLoad isStore) dHit) iHit) dFsmState)))) <: H     ; dDataRamIn <= SMDR @mem18.v:442
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1))) (Dsize==1) (Not(Dsize==2))  =>  H <: H     ; dDataRamIn <= ((dDataRamMuxOut)&(~(mask)))|(((SMDR)&(65535))<<(sa)) @mem18.v:445
(Not(MRST==1)) (dFsmState==DFSM_IDLE) (And ( (isStore == 1) ,  (dHit == 1))) (Dsize==0) (Not(Dsize==1)) (Not(Dsize==2))  =>  H <: H     ; dDataRamIn <= ((dDataRamMuxOut)&(~(mask)))|(((SMDR)&(255))<<(sa)) @mem18.v:448
